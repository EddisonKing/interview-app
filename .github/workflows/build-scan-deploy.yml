# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  gitleaks:
    name: GitLeaks Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Run GitLeaks
        uses: gitleaks/gitleaks-action@v2.3.4
  snyk:
    name: Snyk Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Run Snyk Vulnerability Scan
        uses: snyk/actions/golang@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif

  build-and-test:
    name: Build & Unit Test
    runs-on: ubuntu-latest
    needs: [ snyk, gitleaks ]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
      - name: Build Application
        run: go build -v ./...
      - name: Run Unit Tests
        run: go test -v ./...

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: build-and-test
    environment: staging
    steps:
      - name: Deploy Application to Staging
        run: |
          echo "Deploying to staging..."
          # This is a placeholder for a real deployment

  owasp-zap:
    name: OWASP Zap Scan
    runs-on: ubuntu-latest
    needs: deploy-staging
    steps:
      - name: Run Baseline Scan
        uses: zaproxy/action-baseline@v0.14.0
        with:
          target: ${{ vars.STAGING_URL }}
          token: ${{ github.token }}

  nikto:
    name: Nikto Scan
    runs-on: ubuntu-latest
    needs: deploy-staging
    steps:
      - name: Run Nikto Scan
        uses: thereisnotime/Action-nikto@v1
        with:
          url: ${{ vars.STAGING_URL }}

  deploy-prod:
    name: Deploy to Prod
    runs-on: ubuntu-latest
    needs: [ owasp-zap, nikto ]
    environment: staging
    steps:
      - name: Deploy Application to Staging
        run: |
          echo "Deploying to staging..."
          # This is a placeholder for a real deployment
      
